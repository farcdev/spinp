PIDGIN_TREE_TOP := ../../..
include $(PIDGIN_TREE_TOP)/libpurple/win32/global.mak

TARGET = libspinp
TYPE = PLUGIN

# Static or Plugin...
ifeq ($(TYPE),STATIC)
  DEFINES += -DSTATIC
  DLL_INSTALL_DIR =	$(PURPLE_INSTALL_DIR)
else
ifeq ($(TYPE),PLUGIN)
  DLL_INSTALL_DIR =	$(PURPLE_INSTALL_PLUGINS_DIR)
endif
endif

##
## INCLUDE PATHS
##
INCLUDE_PATHS +=	-I. \
			-I$(GTK_TOP)/include \
			-I$(GTK_TOP)/include/glib-2.0 \
			-I$(GTK_TOP)/lib/glib-2.0/include \
			-I$(PURPLE_TOP) \
			-I$(PURPLE_TOP)/win32 \
			-I$(PIDGIN_TREE_TOP)

LIB_PATHS += -L. \
			-L$(GTK_TOP)/lib \
			-L$(PURPLE_TOP)

##
##  SOURCES, OBJECTS
##
C_SRC =	libspinp.cpp \
	extern/convert/convert.cpp \
	common.cpp \
	connector.cpp \
	cookie.cpp \
	convert.cpp \
	logger.cpp \
	message.cpp \
	http_request.cpp \
	base_connector.cpp \
	purple_connector.cpp 
	

OBJECTS = $(C_SRC:%.c=%.o)

##
## LIBRARIES
##
LIBS =	\
			-lglib-2.0 \
			-lintl \
			-lpurple
			
MORESHIT = -DCURL_STATICLIB "c:/mingw/lib/libcurl.a" -lws2_32 -lz -std=gnu++11 -lpthread -lcurl -liconv -lcrypt32
MORESHIT +=	-DPURPLE_PLUGINS \
			-DENABLE_NLS \
			-D_GLIBCXX_DEBUG \
			-DSPINPLOG 
			

#ifeq ($(CYRUS_SASL), 1)
#INCLUDE_PATHS += -I$(CYRUS_SASL_TOP)/include
#LIB_PATHS += -L$(CYRUS_SASL_TOP)/bin
#LIBS += -llibsasl
#endif

include $(PIDGIN_COMMON_RULES)

##
## TARGET DEFINITIONS
##
.PHONY: all install clean

all: $(TARGET).dll

install: all $(DLL_INSTALL_DIR)
	cp $(TARGET).dll $(DLL_INSTALL_DIR)

$(OBJECTS): $(PURPLE_CONFIG_H)

##
## BUILD DLL
##
$(TARGET).dll: $(PURPLE_DLL).a $(OBJECTS)
#	echo $(INCLUDE_PATHS)
	g++ -shared $(OBJECTS) $(INCLUDE_PATHS) $(LIB_PATHS) $(LIBS) $(MORESHIT) -std=gnu++11 -o $(TARGET).dll -Wall -g 
#	$(CC) -shared $(OBJECTS) $(LIB_PATHS) $(LIBS) $(DLL_LD_FLAGS) -o $(TARGET).dll

##
## CLEAN RULES
##

clean:
	rm -f $(OBJECTS)
	rm -f $(TARGET).dll

include $(PIDGIN_COMMON_TARGETS) 
